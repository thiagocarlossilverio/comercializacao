<?phpclass TCS_Form_FormNegociacao extends Zend_Form {    public $view = NULL;    public function init() {        $viewRenderer = Zend_Controller_Action_HelperBroker::getStaticHelper('ViewRenderer');        $viewRenderer->init();        $this->view = $viewRenderer->view;        $this->setAction('');        $this->setMethod('post');        $this->setAttribs(array('id' => 'FormNegociacao', 'name' => 'FormNegociacao'));        $this->setAttrib('enctype', 'multipart/form-data');        $elemento = $this->createElement('hidden', 'id', array('id' => 'id'));        $elemento->removeDecorator('HtmlTag')->removeDecorator('Label');        $this->addElement($elemento);        $elemento = $this->createElement('hidden', 'endereco', array('id' => 'endereco'));        $elemento->removeDecorator('HtmlTag')->removeDecorator('Label');        $this->addElement($elemento);        $elemento = $this->createElement('hidden', 'negociacao', array('id' => 'negociacao'));        $elemento->removeDecorator('HtmlTag')->removeDecorator('Label');        $this->addElement($elemento);        $elemento = $this->createElement('text', 'preco', array('id' => 'preco', 'Label' => 'Preço *', 'class' => 'form-control'));        $elemento->setRequired(true);        $this->addElement($elemento);        $ModelCondicao = new Admin_Model_CondicaoPagamento();        $elemento = $this->createElement('select', 'condicao_pagamento', array('label' => 'Condição Pagamento', 'id' => 'condicao_pagamento', 'class' => 'form-control'));        $lista_condicao = $ModelCondicao->ListarCondicao();        $elemento->addMultioptions(array('' => 'Selecione a condição de pagamento'));        foreach ($lista_condicao as $key => $row) {            if ($row['id']) {                $elemento->addMultioptions(array($row['id'] => $row['nome']));            }        }        $elemento->setRequired(true);        $this->addElement($elemento);        $ModelForma = new Admin_Model_FormaPagamento();        $elemento = $this->createElement('select', 'forma_pagamento', array('label' => 'Forma Pagamento', 'id' => 'forma_pagamento', 'class' => 'form-control'));        $lista_forma = $ModelForma->ListarForma();        $elemento->addMultioptions(array('' => 'Selecione a forma de pagamento'));        foreach ($lista_forma as $key => $row) {            if ($row['id']) {                $elemento->addMultioptions(array($row['id'] => $row['nome']));            }        }        $elemento->setRequired(true);        $this->addElement($elemento);        $elemento = $this->createElement('textarea', 'descricao_pagamento', array('label' => 'Descrição Pagamento', 'rows' => '3', 'id' => 'descricao_pagamento', 'class' => 'form-control'));        $this->addElement($elemento);        $elemento = $this->createElement('select', 'tributacao', array('label' => 'Tributação', 'id' => 'tributacao', 'class' => 'form-control'));        $elemento->addMultioptions(array(            'A negociar' => 'A negociar',            'Sem FUNRURAL/sem ICMS' => 'Sem FUNRURAL/sem ICMS',            'Sem FUNRURAL/com ICMS' => 'Sem FUNRURAL/com ICMS',            'Com FUNRURAL/sem ICMS' => 'Com FUNRURAL/sem ICMS',            'Com FUNRURAL/com ICMS' => 'Com FUNRURAL/com ICMS'        ));        $elemento->setRequired(true);        $this->addElement($elemento);        $elemento = $this->createElement('textarea', 'descricao_tributaria', array('label' => 'Descrição Tributaria', 'rows' => '3', 'id' => 'descricao_tributaria', 'class' => 'form-control'));        $this->addElement($elemento);        $elemento = $this->createElement('select', 'transporte', array('label' => 'Transporte', 'id' => 'transporte', 'class' => 'form-control'));        $elemento->addMultioptions(array(            'Entregue por Schoeler' => 'Entregue por Schoeler',            'Retirar na Unidade' => 'Retirar na Unidade'        ));        $elemento->setRequired(true);        $this->addElement($elemento);        $elemento = $this->createElement('text', 'data_entrega', array('id' => 'data_entrega', 'Label' => 'Data Entrega', 'class' => 'form-control'));        $elemento->setRequired(true);        $this->addElement($elemento);        $elemento = $this->createElement('text', 'hora_inicial', array('id' => 'hora_inicial', 'Label' => 'Hora Inicial', 'class' => 'form-control'));        $elemento->setAttrib('readonly', 'readonly');        $elemento->setRequired(true);        $this->addElement($elemento);        $elemento = $this->createElement('text', 'hora_final', array('id' => 'hora_final', 'Label' => 'Hora Final', 'class' => 'form-control'));        $elemento->setAttrib('readonly', 'readonly');        $elemento->setRequired(true);        $this->addElement($elemento);        $elemento = $this->createElement('textarea', 'comentario', array('label' => 'Comentario', 'rows' => '3', 'id' => 'comentario', 'class' => 'form-control'));        $this->addElement($elemento);        $elemento = $this->createElement('submit', 'Salvar', array('class' => 'btn btn-success'));        $elemento->removeDecorator('Label');        $this->addElement($elemento);        $this->addDisplayGroup(array('id', 'endereco', 'negociacao', 'preco', 'condicao_pagamento', 'forma_pagamento', 'descricao_pagamento', 'tributacao', 'descricao_tributaria', 'transporte', 'data_entrega', 'hora_inicial', 'hora_final', 'comentario', 'Salvar'), 'forma', array('removeDecorator' => 'Label'));        $this->setDisplayGroupDecorators(array('FormElements', 'Fieldset'));    }}